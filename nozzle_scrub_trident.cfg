#######################################################################################################################################

# Sample macro config to be used in conjunction with the Decontaminator Purge Bucket & Nozzle Scrubber mod. 
# Created by Hernsl (hernsl#8860 on Discord) and edited by Edwardyeeks (edwardyeeks#6042 on Discord). 
# Several ideas that made it as features by Deutherius (deutherius#3295 on Discord).

# The goal of this macro is to provide a nozzle scrubbing and purging routine that is easily copied/referenced into your  printer.cfg.
# Users can simply change parameters and enable/disable options in the first half. 
# Descriptions are plentiful, making this macro look huge but informative and are 
# laid out in sequence to be read first describing the line below; PLEASE READ CAREFULLY.

# This sample config assumes the following: 
# The user has implemented the default decontaminator purge bucket & nozzle scrubber mod for the Trident. 
# It can be tweaked to customised purge bucket geometries and brushes.

# Features in this macro: 
# - Option of putting the bucket at the rear or front of the bed. 
# - Purge routine that can be enabled/disabled.
# - By default, bucket is located at rear left of bed and purge routine is enabled. 
#   The purge and scrubbing routine is randomized in either left or right bucket 
#   to ensure as even as possible distribution of filament gunk.

# Default parameters are set for safe speeds and movements. 
# Where necessary, tweak the parameters for the nozzle scrub procedure to fit your printer.

# To avoid adding length of lines to your main printer.cfg config file, one can upload a
# config file separately into klipper and include it into the main printer config. 
# Upload nozzle_scrub.cfg to the same directory as printer.cfg (/home/pi/).
# Users of Fluidd, Mainsail and other klipper front ends would find it under /home/pi/klipper_config/.

# Once uploaded, add the following to your printer.cfg in the Macros section: 
# [include /home/pi/nozzle_scrub.cfg] 
# Those running Fluidd, Mainsail and other front ends will need to use the following location instead:
# [include /home/pi/klipper_config/nozzle_scrub.cfg]

#######################################################################################################################################

[gcode_macro clean_nozzle]

# purge bucket at the rear right of the bed as per default installation.
# set to True to enable the purging routine into the bucket.
variable_enable_purge:   True

# Filament purging parameters. 
# purge_ret is used to retract right after purging to prevent unnecessary oozing. 
# Some filament may continue to ooze for a second or two after retracting. 
# The ooze dwell variable makes allowance for this.
variable_purge_len:        10	         ; Amount of filament (mm) to purge.
variable_purge_spd:       150	         ; Speed, in mm/min, of the purge.
variable_purge_temp_min:  240	         ; Minimum nozzle temperature to permit a purge.
variable_purge_ret:         2            ; Retract length (mm) after purging to prevent oozing.
variable_ooze_dwell:        2            ; Dwell/wait time (seconds) after purging and retracting.

# Adjust so that your nozzle scrubs within the brush. 
# Currently defaulted to be a lot higher for safety. Be careful not to go too low!
variable_brush_top:        1 

# Scrubbing, travel speeds, safe z clearance and number of wipe parameters.  
# Wipe direction is randomized based off whether the left or right bucket is randomly selected in the purge & scrubbing routine.
variable_clearance_z:        5	         ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and brush.
variable_wipe_qty:           3	         ; Number of wipes (A wipe: left-right-left OR right-left-right).
variable_prep_spd_xy:     3000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:      1500	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:     5000	         ; Nozzle wipe speed in mm/min.


# These parameters define the size of the brush.
# 
#                  ←   brush_width   →                            
#                   _________________                                            ↑
#                  |                 |  ↑                 Y position is acquired from your stepper_y position_max. 
#  brush_start (x) |                 | brush_depth             Adjust your brush physically in Y so that 
#                  |_________________|  ↓                          the nozzle scrubs within the brush.
#                          (y)                                                   ↓
#                      brush_front
# __________________________________________________________
#                     PRINTER FRONT
# 
# 
## measure where your brush is on the x, y axis and input manually.
variable_brush_start: 219
variable_brush_width:  40	
variable_brush_front: 305          
variable_brush_depth:  10          


# These parameters define the size of your purge bucket. 
# 
#                                     bucket_gap
#                                      ← ---- →
#                     __________________________________________
#                    |                 |      |                 |      
#                    |                 |      |                 |
#  bucket_start (x)  |                 |______|                 |
#                    |                 |      |                 |
#                    |                 |      |                 |
#                    |_________________|. . . |_________________|
#                     ← ------------- →        ← ------------- →
#                     bucket_left_width        bucket_right_width
#  _______________________________________________________________________________________
#                                    PRINTER FRONT
# 
variable_bucket_left_width:  40   
variable_bucket_right_width: 38            
variable_bucket_gap:         24	
variable_bucket_start:      189


##########################################################################################################################################
##########################################################################################################################################

### From here on, it's recommended not to change anything. Feel free to peruse the code and reach out to me
### (edwardyeeks#6042) on Discord if you spot any problems!

##########################################################################################################################################
##########################################################################################################################################

# Placeholder. The variable will later be set to contain, at random, a number representing the left or right bucket.
variable_bucket_pos: 1	        

gcode:
   # First, check if the axes are homed.
   {% if "xyz" in printer.toolhead.homed_axes %}

      ## Save the gcode state in this macro instance.
      SAVE_GCODE_STATE NAME=clean_nozzle

      ## Set to absolute positioning.
      G90

      ## Grab max position of Y-axis from config to use in setting a fixed y position.
      {% set Ry = printer.configfile.config["stepper_y"]["position_max"]|float %}

      ## Check if user enabled purge option.
      {% if enable_purge %}

         ### Randomly select left or right bin for purge. 0 = left, 1 = right
         SET_GCODE_VARIABLE MACRO=clean_nozzle VARIABLE=bucket_pos VALUE={(range(2) | random)}

         ### Raise Z for travel.
         G1 Z{brush_top + clearance_z} F{prep_spd_z}
         G1 Y{Ry} F{prep_spd_xy}

         ### Position for purge. Randomly selects middle of left or right bucket. It references from the middle of the left bucket.
         G1 X{bucket_start + (bucket_left_width / (2 - bucket_pos)) + (bucket_pos * bucket_gap) + (bucket_pos * (bucket_right_width / 2))}

         ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro. Small retract after
         ### purging to minimize any persistent oozing at 5x purge_spd. G4 dwell is in milliseconds, hence * 1000 in formula.
         {% if printer.extruder.temperature >= purge_temp_min %}
            M83      ; relative mode
            G1 E{purge_len} F{purge_spd}
            G1 E-{purge_ret} F{purge_spd * 5}
            G4 P{ooze_dwell * 1000}
            G92 E0   ; reset extruder
         {% endif %}

      {% endif %}
   
      ## Position for wipe. Either left or right of brush based off bucket_pos to avoid unnecessary travel.
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{brush_start + (brush_width * bucket_pos)} F{prep_spd_xy}
      G1 Y{Ry}

      ## Move nozzle down into brush.
      G1 Z{brush_top} F{prep_spd_z}
   
      ## Perform wipe. Wipe direction based off bucket_pos for cool random scrubby routine.
      {% for wipes in range(1, (wipe_qty + 1)) %}
         G1 X{brush_start + (brush_width * (1 - bucket_pos))} F{wipe_spd_xy}
         G1 X{brush_start + (brush_width * bucket_pos)} F{wipe_spd_xy}
      {% endfor %}
   
      ## Clear from area.
      M117 Cleaned!
      G1 Z{brush_top + clearance_z} F{prep_spd_z}
      G1 X{bucket_start + (bucket_left_width / 4)} F{prep_spd_xy} #bugfix for right side mounted buckets

      ## Restore the gcode state to how it was before the macro.
      RESTORE_GCODE_STATE NAME=clean_nozzle

   {% else %}

      ## raise error will stop any macros that clean_nozzle is referenced in from proceeding for safety.
      { action_raise_error("Please home your axes!") }
      M117 Please home first!

   {% endif %}
